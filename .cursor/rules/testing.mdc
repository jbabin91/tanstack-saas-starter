---
description: Testing standards and practices using Vitest and related testing tools
globs: ['**/*.test.ts', '**/*.test.tsx', '**/*.spec.ts', '**/*.spec.tsx']
---

# Testing Rules

## Test Organization

- Place tests next to the files they test
- Use descriptive test file names
- Group related tests using describe blocks
- Write clear test descriptions
- Follow the Arrange-Act-Assert pattern

## Vitest Usage

- Use proper test runners and configurations
- Implement proper mocking strategies
- Use proper assertion methods
- Handle async tests properly
- Use proper setup and teardown

## Test Coverage

- Maintain high test coverage for critical paths
- Write unit tests for utility functions
- Write integration tests for complex features
- Test error handling paths
- Test edge cases and boundary conditions

## Mock Data

- Use Faker.js for generating test data
- Create realistic test scenarios
- Use consistent mock data patterns
- Document mock data generation
- Keep mock data maintainable

## Testing Best Practices

- Write isolated tests
- Avoid test interdependencies
- Use proper cleanup after tests
- Write deterministic tests
- Keep tests focused and simple
- Test both success and failure paths

## Component Testing

- Test component rendering
- Test component interactions
- Test component props
- Test component events
- Test component error states
- Test component accessibility
